{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","negation","answerOptions","answerText","verdict","useState","displayedQuestion","changeDisplayedQuestion","testOver","setTestOver","score","changeScore","negative","setNegative","handleScreenState","skip","length","className","map","answerOption","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKACe,SAASA,IACvB,IAAMC,EAAY,CACjB,CACCC,aAAc,6CACdC,UAAU,EACVC,cAAe,CACd,CAAEC,WAAY,QAASC,SAAS,GAChC,CAAED,WAAY,OAAQC,SAAS,GAC/B,CAAED,WAAY,MAAOC,SAAS,GAC9B,CAAED,WAAY,SAAUC,SAAS,KAGnC,CACCJ,aAAc,qCACdC,UAAU,EACVC,cAAe,CACd,CAAEC,WAAY,WAAYC,SAAS,GACnC,CAAED,WAAY,YAAaC,SAAS,GACpC,CAAED,WAAY,aAAcC,SAAS,KAGvC,CACCJ,aAAc,kDACdC,UAAU,EACVC,cAAe,CACd,CAAEC,WAAY,QAASC,SAAS,GAChC,CAAED,WAAY,OAAQC,SAAS,GAC/B,CAAED,WAAY,aAAcC,SAAS,GACrC,CAAED,WAAY,eAAgBC,SAAS,KAGzC,CACCJ,aAAc,yBACdC,UAAU,EACVC,cAAe,CACd,CAAEC,WAAY,kBAAmBC,SAAS,GAC1C,CAAED,WAAY,aAAcC,SAAS,GACrC,CAAED,WAAY,eAAgBC,SAAS,MAI1C,EAAqDC,mBAAS,GAA9D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,GAArC,mBAAMK,EAAN,KAAaC,EAAb,KACA,EAA8BN,mBAAS,GAAvC,mBAAMO,EAAN,KAAeC,EAAf,KACMC,EAAoB,SAACV,EAAQH,EAASc,GACxCA,IASAX,EACFO,EAAYD,EAAM,GAGfT,IACFU,EAAYD,EAAM,GAClBG,EAAYD,EAAS,KAdnBN,EAAkB,EAAEP,EAAUiB,OAChCT,EAAwBD,EAAkB,GAG1CG,GAAY,IAsBf,OAEC,aADA,CACA,OAAKQ,UAAY,MAAjB,SACET,EACD,sBAAKS,UAAY,aAAjB,qBAAuCP,EAAvC,IAA+CX,EAAUiB,OAAzD,yBAAuFN,EAAME,EAA7F,qBAAyHA,EAAzH,OACA,sBAAKK,UAAY,kBAAjB,UACA,sBAAKA,UAAU,gBAAf,UACC,6CAAgBX,EAAoB,KADrC,OACmDP,EAAUiB,UAE7D,qBAAKC,UAAU,eAAf,SACClB,EAAUO,GAAmBN,eAE9B,sBAAKiB,UAAU,gBAAf,UAEElB,EAAUO,GAAmBJ,cAAcgB,KAAI,SAACC,GAAD,OAC9C,wBAAQC,QAAS,kBAAIN,EAAkBK,EAAaf,QAAQL,EAAUO,GAAmBL,UAAS,IAAlG,SAA2GkB,EAAahB,gBAG1H,wBAAQiB,QAAS,kBAAIN,EAAkB,KAAK,MAAK,IAAjD,0BC5FJ,IAYeO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5c98e84f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the time complexity for quick sort',\n\t\t\tnegation: true,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'nlogn', verdict: true },\n\t\t\t\t{ answerText: 'logn', verdict: false },\n\t\t\t\t{ answerText: 'n^2', verdict: false },\n\t\t\t\t{ answerText: 'nlog*n', verdict: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Which engine does node.js rip off?',\n\t\t\tnegation: true,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Safari 3', verdict: false },\n\t\t\t\t{ answerText: 'Chrome V8', verdict: true },\n\t\t\t\t{ answerText: 'FireFox v3', verdict: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The language used to vreate iOS apps mainly is?',\n\t\t\tnegation: true,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Swift', verdict: true },\n\t\t\t\t{ answerText: 'Java', verdict: false },\n\t\t\t\t{ answerText: 'JavaScript', verdict: false },\n\t\t\t\t{ answerText: 'Visual Basic', verdict: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who made the linux OS?',\n\t\t\tnegation: true,\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Linus Trivaldus', verdict: true },\n\t\t\t\t{ answerText: 'Steve Jobs', verdict: false },\n\t\t\t\t{ answerText: 'Henry Cohern', verdict: false },\n\t\t\t],\n\t\t},\n\t];\n\tconst [displayedQuestion, changeDisplayedQuestion] = useState(0);\n\tconst [testOver, setTestOver] = useState(false);\n\tconst[score, changeScore] = useState(0);\n\tconst[negative,setNegative] = useState(0);\n\tconst handleScreenState = (verdict,negation,skip) => {\n\t\tif(skip){\n\t\t\tif(displayedQuestion+1<questions.length){\n\t\t\t\tchangeDisplayedQuestion(displayedQuestion+1)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetTestOver(true)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\tif(verdict){\n\t\t\tchangeScore(score+1);\n\t\t}\n\t\telse{\n\t\t\tif(negation){\n\t\t\t\tchangeScore(score-1);\n\t\t\t\tsetNegative(negative+1);\n\t\t\t}\n\t\t}\n\n\t\tif(displayedQuestion+1<questions.length){\n\t\t\tchangeDisplayedQuestion(displayedQuestion+1)\n\t\t}\n\t\telse{\n\t\t\tsetTestOver(true)\n\t\t}\n\t}\n\t\n\treturn (\n\t\t//following Bem convention\n\t\t<div className = \"app\">\n\t\t\t{testOver?\n\t\t(<div className = \"scoredCard\">Scored: {score}/{questions.length}, Correctly answered: {score+negative}, Negative marks: {negative} </div>):\n\t\t(<div className = \"questionSection\">\n\t\t\t<div className=\"questionCount\">\n\t\t\t\t<span>Question {displayedQuestion + 1}</span> of {questions.length}\n\t\t\t</div>\n\t\t\t<div className=\"questionText\">{\n\t\t\t\tquestions[displayedQuestion].questionText\n\t\t\t}</div>\n\t\t\t<div className=\"answerSection\">\n\t\t\t\t{\n\t\t\t\t\tquestions[displayedQuestion].answerOptions.map((answerOption)=>(\n\t\t\t\t\t\t<button onClick={()=>handleScreenState(answerOption.verdict,questions[displayedQuestion].negation,false)}>{answerOption.answerText}</button>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t\t<button onClick={()=>handleScreenState(null,null,true)}>Skip</button>\n\t\t\t</div>\n\t\t</div>)\t\n\t\t\n\t\t}\n\t\t\t\n\t\t</div>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}